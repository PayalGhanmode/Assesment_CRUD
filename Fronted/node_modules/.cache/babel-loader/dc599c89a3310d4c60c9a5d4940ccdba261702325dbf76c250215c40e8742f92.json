{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghanm\\\\Desktop\\\\MachineTest\\\\Fronted11oct\\\\src\\\\components\\\\pages\\\\SignIn.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\n// import \"../pages/style.css\";\n\n// const SignIn = () => {\n//   const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n//   const [errorMessage, setErrorMessage] = useState();\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const result = await axios.post(`http://localhost:3002/api/login`, formData);\n//       localStorage.setItem(\"id\", result.data.id);\n//       localStorage.setItem(\"token\", result.data.token);\n//       alert(\"Login Successful!!!\");\n//       setTimeout(() => {\n//         navigate(\"/dashboard\");\n//       }, 400);\n//     } catch (error) {\n//       setErrorMessage(\"Login Failed\");\n//     }\n//   };\n\n//   const handleGoogleLoginSuccess = async (response) => {\n//     try {\n//       const result = await axios.post(\"http://localhost:3002/api/google-login\", { token: response.credential, });\n\n//       localStorage.setItem(\"id\", result.data.id);\n//       localStorage.setItem(\"token\", result.data.token);\n\n//       if (result.data.newUser) {\n//         // Notify the user if they are new and have received a temporary password\n//         alert(\"Your account has been created with a temporary password. Please check your email and change it in your profile settings.\");\n//       } else {\n//         alert(\"Google Login Successful!!!\");\n//       }\n\n//       setTimeout(() => {\n//         navigate(\"/dashboard\");\n//       }, 1000);\n//     } catch (error) { setErrorMessage(\"Google Login Failed\"); }\n//   };\n\n//   // const handleGoogleLoginSuccess = async (response) => {\n//   //   try {\n//   //     const result = await axios.post(`http://localhost:3002/api/google-login`, {\n//   //       token: response.credential,\n//   //     });\n\n//   //     // Store user ID and token in localStorage\n//   //     localStorage.setItem(\"id\", result.data.id);\n//   //     localStorage.setItem(\"token\", result.data.token);\n\n//   //     // Check if the user is newly created\n//   //     if (result.data.newUser) {\n//   //       alert(\"Your account has been created with a default password. Please change it in your profile settings.\");\n//   //     }\n\n//   //     alert(\"Google Login Successful!!!\");\n//   //     setTimeout(() => {\n//   //       navigate(\"/dashboard\");\n//   //     }, 1000);\n//   //   } catch (error) {\n//   //     setErrorMessage(\"Google Login Failed\");\n//   //   }\n//   // };\n\n//   return (\n//     <GoogleOAuthProvider clientId=\"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\">\n//       <div className=\"auth-wrapper\">\n//         <div className=\"auth-container\">\n//           <h2 className=\"auth-title\">Welcome Back!</h2>\n//           <p className=\"auth-subtitle\">Login to access your account</p>\n\n//           <form className=\"auth-form\" onSubmit={handleSubmit}>\n//             <input type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} required />\n//             <input type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange} required />\n//             <button type=\"submit\" className=\"small-button\">Login</button>\n//           </form>\n\n//           {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//           {/* Google Login Button */}\n//           <div className=\"google-login\">\n//             <p>or</p>\n//             <GoogleLogin\n//               onSuccess={handleGoogleLoginSuccess}\n//               onError={() => setErrorMessage(\"Google Login Failed\")}\n//             />\n//           </div>\n\n//           {/* Redirect to Register */}\n//           <div className=\"auth-footer\">\n//             <h3>Don't have an account? <span className=\"auth-link\" onClick={() => navigate(\"/signup\")}>Register here</span></h3>\n//           </div>\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default SignIn;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\n// import \"../pages/style.css\";\n\n// const SignIn = () => {\n//   const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n//   const [errorMessage, setErrorMessage] = useState();\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const result = await axios.post(`http://localhost:3002/api/login`, formData);\n//       localStorage.setItem(\"id\", result.data.id);\n//       localStorage.setItem(\"token\", result.data.token);\n//       alert(\"Login Successful!!!\");\n//       setTimeout(() => {\n//         navigate(\"/dashboard\");\n//       }, 400);\n//     } catch (error) {\n//       setErrorMessage(\"Login Failed\");\n//     }\n//   };\n\n//   const handleGoogleLoginSuccess = async (response) => {\n//     try {\n//       const result = await axios.post(\"http://localhost:3002/api/google-login\", { token: response.credential, });\n\n//       localStorage.setItem(\"id\", result.data.id);\n//       localStorage.setItem(\"token\", result.data.token);\n\n//       if (result.data.newUser) {\n//         // Notify the user if they are new and have received a temporary password\n//         alert(\"Your account has been created with a temporary password. Please check your email and change it in your profile settings.\");\n//       } else {\n//         alert(\"Google Login Successful!!!\");\n//       }\n\n//       setTimeout(() => {\n//         navigate(\"/dashboard\");\n//       }, 1000);\n//     } catch (error) { setErrorMessage(\"Google Login Failed\"); }\n//   };\n\n//   // const handleGoogleLoginSuccess = async (response) => {\n//   //   try {\n//   //     const result = await axios.post(`http://localhost:3002/api/google-login`, {\n//   //       token: response.credential,\n//   //     });\n\n//   //     // Store user ID and token in localStorage\n//   //     localStorage.setItem(\"id\", result.data.id);\n//   //     localStorage.setItem(\"token\", result.data.token);\n\n//   //     // Check if the user is newly created\n//   //     if (result.data.newUser) {\n//   //       alert(\"Your account has been created with a default password. Please change it in your profile settings.\");\n//   //     }\n\n//   //     alert(\"Google Login Successful!!!\");\n//   //     setTimeout(() => {\n//   //       navigate(\"/dashboard\");\n//   //     }, 1000);\n//   //   } catch (error) {\n//   //     setErrorMessage(\"Google Login Failed\");\n//   //   }\n//   // };\n\n//   return (\n//     <GoogleOAuthProvider clientId=\"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\">\n//       <div className=\"auth-wrapper\">\n//         <div className=\"auth-container\">\n//           <h2 className=\"auth-title\">Welcome Back!</h2>\n//           <p className=\"auth-subtitle\">Login to access your account</p>\n\n//           <form className=\"auth-form\" onSubmit={handleSubmit}>\n//             <input type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} required />\n//             <input type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange} required />\n//             <button type=\"submit\" className=\"small-button\">Login</button>\n//           </form>\n\n//           {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n//           {/* Google Login Button */}\n//           <div className=\"google-login\">\n//             <p>or</p>\n//             <GoogleLogin\n//               onSuccess={handleGoogleLoginSuccess}\n//               onError={() => setErrorMessage(\"Google Login Failed\")}\n//             />\n//           </div>\n\n//           {/* Redirect to Register */}\n//           <div className=\"auth-footer\">\n//             <h3>Don't have an account? <span className=\"auth-link\" onClick={() => navigate(\"/signup\")}>Register here</span></h3>\n//           </div>\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default SignIn;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\nimport \"../pages/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\n  const [forgotEmail, setForgotEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const result = await axios.post(`http://localhost:3002/api/login`, formData);\n      localStorage.setItem(\"id\", result.data.id);\n      localStorage.setItem(\"token\", result.data.token);\n      alert(\"Login Successful!!!\");\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 200);\n    } catch (error) {\n      setErrorMessage(\"Login Failed\");\n    }\n  };\n  const handleGoogleLoginSuccess = async response => {\n    try {\n      const result = await axios.post(\"http://localhost:3002/api/google-login\", {\n        token: response.credential\n      });\n      localStorage.setItem(\"id\", result.data.id);\n      localStorage.setItem(\"token\", result.data.token);\n      alert(\"Google Login Successful!!!\");\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 1000);\n    } catch (error) {\n      setErrorMessage(\"Google Login Failed\");\n    }\n  };\n  const handleForgotPassword = async () => {\n    try {\n      const result = await axios.post(\"http://localhost:3002/api/forgot-password\", {\n        email: forgotEmail\n      });\n      if (result.data.success) {\n        alert(\"Temporary password sent to your email\");\n      } else {\n        setErrorMessage(\"Email not registered\");\n      }\n      setIsForgotPassword(false);\n    } catch (error) {\n      setErrorMessage(\"Error sending temporary password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"auth-title\",\n          children: \"Welcome Back!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"auth-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter password\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"small-button\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleGoogleLoginSuccess,\n            onError: () => setErrorMessage(\"Google Login Failed\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"auth-link\",\n              onClick: () => navigate(\"/signup\"),\n              children: \"Register here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password-link\",\n          onClick: () => setIsForgotPassword(true),\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), isForgotPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forgot-password-popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter Your Email\",\n            value: forgotEmail,\n            onChange: e => setForgotEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleForgotPassword,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsForgotPassword(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"pMBjN+tnyjafAtaPaFQV0UA1P8I=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useNavigate","axios","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","SignIn","_s","formData","setFormData","email","password","errorMessage","setErrorMessage","isForgotPassword","setIsForgotPassword","forgotEmail","setForgotEmail","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","result","post","localStorage","setItem","data","id","token","alert","setTimeout","error","handleGoogleLoginSuccess","response","credential","handleForgotPassword","success","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onSuccess","onError","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ghanm/Desktop/MachineTest/Fronted11oct/src/components/pages/SignIn.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\n// import \"../pages/style.css\";\r\n\r\n// const SignIn = () => {\r\n//   const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n//   const [errorMessage, setErrorMessage] = useState();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const result = await axios.post(`http://localhost:3002/api/login`, formData);\r\n//       localStorage.setItem(\"id\", result.data.id);\r\n//       localStorage.setItem(\"token\", result.data.token);\r\n//       alert(\"Login Successful!!!\");\r\n//       setTimeout(() => {\r\n//         navigate(\"/dashboard\");\r\n//       }, 400);\r\n//     } catch (error) {\r\n//       setErrorMessage(\"Login Failed\");\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n//   const handleGoogleLoginSuccess = async (response) => {\r\n//     try {\r\n//       const result = await axios.post(\"http://localhost:3002/api/google-login\", { token: response.credential, });\r\n\r\n//       localStorage.setItem(\"id\", result.data.id);\r\n//       localStorage.setItem(\"token\", result.data.token);\r\n\r\n//       if (result.data.newUser) {\r\n//         // Notify the user if they are new and have received a temporary password\r\n//         alert(\"Your account has been created with a temporary password. Please check your email and change it in your profile settings.\");\r\n//       } else {\r\n//         alert(\"Google Login Successful!!!\");\r\n//       }\r\n\r\n//       setTimeout(() => {\r\n//         navigate(\"/dashboard\");\r\n//       }, 1000);\r\n//     } catch (error) { setErrorMessage(\"Google Login Failed\"); }\r\n//   };\r\n\r\n//   // const handleGoogleLoginSuccess = async (response) => {\r\n//   //   try {\r\n//   //     const result = await axios.post(`http://localhost:3002/api/google-login`, {\r\n//   //       token: response.credential,\r\n//   //     });\r\n\r\n//   //     // Store user ID and token in localStorage\r\n//   //     localStorage.setItem(\"id\", result.data.id);\r\n//   //     localStorage.setItem(\"token\", result.data.token);\r\n\r\n//   //     // Check if the user is newly created\r\n//   //     if (result.data.newUser) {\r\n//   //       alert(\"Your account has been created with a default password. Please change it in your profile settings.\");\r\n//   //     }\r\n\r\n//   //     alert(\"Google Login Successful!!!\");\r\n//   //     setTimeout(() => {\r\n//   //       navigate(\"/dashboard\");\r\n//   //     }, 1000);\r\n//   //   } catch (error) {\r\n//   //     setErrorMessage(\"Google Login Failed\");\r\n//   //   }\r\n//   // };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId=\"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\">\r\n//       <div className=\"auth-wrapper\">\r\n//         <div className=\"auth-container\">\r\n//           <h2 className=\"auth-title\">Welcome Back!</h2>\r\n//           <p className=\"auth-subtitle\">Login to access your account</p>\r\n\r\n//           <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n//             <input type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} required />\r\n//             <input type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange} required />\r\n//             <button type=\"submit\" className=\"small-button\">Login</button>\r\n//           </form>\r\n\r\n//           {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//           {/* Google Login Button */}\r\n//           <div className=\"google-login\">\r\n//             <p>or</p>\r\n//             <GoogleLogin\r\n//               onSuccess={handleGoogleLoginSuccess}\r\n//               onError={() => setErrorMessage(\"Google Login Failed\")}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Redirect to Register */}\r\n//           <div className=\"auth-footer\">\r\n//             <h3>Don't have an account? <span className=\"auth-link\" onClick={() => navigate(\"/signup\")}>Register here</span></h3>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default SignIn;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\n// import \"../pages/style.css\";\r\n\r\n// const SignIn = () => {\r\n//   const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n//   const [errorMessage, setErrorMessage] = useState();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const result = await axios.post(`http://localhost:3002/api/login`, formData);\r\n//       localStorage.setItem(\"id\", result.data.id);\r\n//       localStorage.setItem(\"token\", result.data.token);\r\n//       alert(\"Login Successful!!!\");\r\n//       setTimeout(() => {\r\n//         navigate(\"/dashboard\");\r\n//       }, 400);\r\n//     } catch (error) {\r\n//       setErrorMessage(\"Login Failed\");\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n//   const handleGoogleLoginSuccess = async (response) => {\r\n//     try {\r\n//       const result = await axios.post(\"http://localhost:3002/api/google-login\", { token: response.credential, });\r\n\r\n//       localStorage.setItem(\"id\", result.data.id);\r\n//       localStorage.setItem(\"token\", result.data.token);\r\n\r\n//       if (result.data.newUser) {\r\n//         // Notify the user if they are new and have received a temporary password\r\n//         alert(\"Your account has been created with a temporary password. Please check your email and change it in your profile settings.\");\r\n//       } else {\r\n//         alert(\"Google Login Successful!!!\");\r\n//       }\r\n\r\n//       setTimeout(() => {\r\n//         navigate(\"/dashboard\");\r\n//       }, 1000);\r\n//     } catch (error) { setErrorMessage(\"Google Login Failed\"); }\r\n//   };\r\n\r\n//   // const handleGoogleLoginSuccess = async (response) => {\r\n//   //   try {\r\n//   //     const result = await axios.post(`http://localhost:3002/api/google-login`, {\r\n//   //       token: response.credential,\r\n//   //     });\r\n\r\n//   //     // Store user ID and token in localStorage\r\n//   //     localStorage.setItem(\"id\", result.data.id);\r\n//   //     localStorage.setItem(\"token\", result.data.token);\r\n\r\n//   //     // Check if the user is newly created\r\n//   //     if (result.data.newUser) {\r\n//   //       alert(\"Your account has been created with a default password. Please change it in your profile settings.\");\r\n//   //     }\r\n\r\n//   //     alert(\"Google Login Successful!!!\");\r\n//   //     setTimeout(() => {\r\n//   //       navigate(\"/dashboard\");\r\n//   //     }, 1000);\r\n//   //   } catch (error) {\r\n//   //     setErrorMessage(\"Google Login Failed\");\r\n//   //   }\r\n//   // };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId=\"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\">\r\n//       <div className=\"auth-wrapper\">\r\n//         <div className=\"auth-container\">\r\n//           <h2 className=\"auth-title\">Welcome Back!</h2>\r\n//           <p className=\"auth-subtitle\">Login to access your account</p>\r\n\r\n//           <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n//             <input type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} required />\r\n//             <input type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange} required />\r\n//             <button type=\"submit\" className=\"small-button\">Login</button>\r\n//           </form>\r\n\r\n//           {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n//           {/* Google Login Button */}\r\n//           <div className=\"google-login\">\r\n//             <p>or</p>\r\n//             <GoogleLogin\r\n//               onSuccess={handleGoogleLoginSuccess}\r\n//               onError={() => setErrorMessage(\"Google Login Failed\")}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Redirect to Register */}\r\n//           <div className=\"auth-footer\">\r\n//             <h3>Don't have an account? <span className=\"auth-link\" onClick={() => navigate(\"/signup\")}>Register here</span></h3>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default SignIn;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\nimport \"../pages/style.css\";\r\n\r\nconst SignIn = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotEmail, setForgotEmail] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await axios.post(`http://localhost:3002/api/login`, formData);\r\n      localStorage.setItem(\"id\", result.data.id);\r\n      localStorage.setItem(\"token\", result.data.token);\r\n      alert(\"Login Successful!!!\");\r\n      setTimeout(() => {\r\n        navigate(\"/dashboard\");\r\n      }, 200);\r\n    } catch (error) {\r\n      setErrorMessage(\"Login Failed\");\r\n    }\r\n  };\r\n\r\n  const handleGoogleLoginSuccess = async (response) => {\r\n    try {\r\n      const result = await axios.post(\"http://localhost:3002/api/google-login\", { token: response.credential });\r\n      localStorage.setItem(\"id\", result.data.id);\r\n      localStorage.setItem(\"token\", result.data.token);\r\n      alert(\"Google Login Successful!!!\");\r\n      setTimeout(() => {\r\n        navigate(\"/dashboard\");\r\n      }, 1000);\r\n    } catch (error) {\r\n      setErrorMessage(\"Google Login Failed\");\r\n    }\r\n  };\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      const result = await axios.post(\"http://localhost:3002/api/forgot-password\", { email: forgotEmail });\r\n      if (result.data.success) {\r\n        alert(\"Temporary password sent to your email\");\r\n      } else {\r\n        setErrorMessage(\"Email not registered\");\r\n      }\r\n      setIsForgotPassword(false);\r\n    } catch (error) {\r\n      setErrorMessage(\"Error sending temporary password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId=\"368841272750-bsgr39djulkqk32p6utco69sqsjj83mc.apps.googleusercontent.com\">\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-container\">\r\n          <h2 className=\"auth-title\">Welcome Back!</h2>\r\n          <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={handleChange} required />\r\n            <input type=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={handleChange} required />\r\n            <button type=\"submit\" className=\"small-button\">Login</button>\r\n          </form>\r\n\r\n          {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n          <div className=\"google-login\">\r\n            <p>or</p>\r\n            <GoogleLogin\r\n              onSuccess={handleGoogleLoginSuccess}\r\n              onError={() => setErrorMessage(\"Google Login Failed\")}\r\n            />\r\n          </div>\r\n          {/* Redirect to Register */}\r\n          <div className=\"auth-footer\">\r\n            <h3>Don't have an account? <span className=\"auth-link\" onClick={() => navigate(\"/signup\")}>Register here</span></h3>\r\n          </div>\r\n\r\n          <p className=\"forgot-password-link\" onClick={() => setIsForgotPassword(true)}>Forgot Password?</p>\r\n\r\n          {isForgotPassword && (\r\n            <div className=\"forgot-password-popup\">\r\n              <h3>Forgot Password</h3>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Enter Your Email\"\r\n                value={forgotEmail}\r\n                onChange={(e) => setForgotEmail(e.target.value)}\r\n              />\r\n              <button onClick={handleForgotPassword}>Send</button>\r\n              <button onClick={() => setIsForgotPassword(false)}>Cancel</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default SignIn;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}